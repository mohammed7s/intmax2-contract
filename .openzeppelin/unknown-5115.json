{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xebAD68329B24Eed1936ccB8005096c244aDE844C",
      "txHash": "0xbc011bf0eec2eb75802d775ed74110009a3078bfe3f11d340b5c9979514d4d7d",
      "kind": "uups"
    },
    {
      "address": "0x62D6D74C3Fc83fBF11391c63db7B584bC2057aC1",
      "txHash": "0x8cff3443a5f31f1a05b1b062c99cdee1e998a0d18fc90247f7f78ad702878a31",
      "kind": "uups"
    },
    {
      "address": "0x6C641D2A5B25fa8c21E8E795c8a596D0838492a7",
      "txHash": "0x69d50d79dd60e4098be68cede9dcddcb937ece4222562db45c50b60e83bca13f",
      "kind": "uups"
    },
    {
      "address": "0x73183751555d4e31f652956CaA7E973ecC55bcf7",
      "txHash": "0x7bdfd2112a5f49c9515547d7b8e7053b2ef77269dcc259b4781b19c419f3d5f8",
      "kind": "uups"
    },
    {
      "address": "0x49d5555c1F35f615a3734Df46A8104AEA5707247",
      "txHash": "0xceae44a39e82a68e07d5eb3d153830324b1e2c1e863875fbf77d7d34e08ac92f",
      "kind": "uups"
    },
    {
      "address": "0x5B47dA61EC890Df74BebAef8b2CC30Bb5138d62a",
      "txHash": "0xe8d0decb2c0e394ca6d435b950b7e3ec3590d5d818187ff5036a8f1281e9ac76",
      "kind": "uups"
    },
    {
      "address": "0xcB5d996cda78778CAbFb926c7F5870463BcEAaE2",
      "txHash": "0x6c909161e952449136b4d19198ca09808138264f5044d32f5b6696d58618e761",
      "kind": "uups"
    },
    {
      "address": "0x6E55D3291BF5C8c9Eaea56374667E074Da66356e",
      "txHash": "0xd3aa8a4f4b3d5b44e2026a8f2f2065e6c3d2349b7ed24f9c5a5bd86fab0d2a61",
      "kind": "uups"
    },
    {
      "address": "0x1F5e840f0747Bdd3249E0aA5f13402bC47dF4cB9",
      "txHash": "0x6d5c1c91d7f4bc82ab6617c3df6375f7fcf93be4701773e5c1b6569912963355",
      "kind": "uups"
    }
  ],
  "impls": {
    "16475ef0a888861e55e8635ebf1e7b7f7b12bc35d4427cc6ab2b95578309fb4d": {
      "address": "0x7C0c7c01C4F8D6048B8Ca363413450E57f8773BA",
      "txHash": "0xdd70e1ff7880b53ab4852846e022155f53b11af9523a978a51e78ba123554e61",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "blockBuilderRegistry",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IBlockBuilderRegistry)9656",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:23"
          },
          {
            "label": "liquidity",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:24"
          },
          {
            "label": "lastProcessedDepositId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:25"
          },
          {
            "label": "blockHashes",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:26"
          },
          {
            "label": "blockBuilders",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:27"
          },
          {
            "label": "contribution",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IContribution)10154",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:29"
          },
          {
            "label": "depositTree",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(DepositTree)12768_storage",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:30"
          },
          {
            "label": "depositTreeRoot",
            "offset": 0,
            "slot": "40",
            "type": "t_bytes32",
            "contract": "Rollup",
            "src": "contracts/rollup/Rollup.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)231_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)164_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)32_storage": {
            "label": "bytes32[32]",
            "numberOfBytes": "1024"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IBlockBuilderRegistry)9656": {
            "label": "contract IBlockBuilderRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IContribution)10154": {
            "label": "contract IContribution",
            "numberOfBytes": "20"
          },
          "t_struct(DepositTree)12768_storage": {
            "label": "struct DepositTreeLib.DepositTree",
            "members": [
              {
                "label": "_branch",
                "type": "t_array(t_bytes32)32_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "32"
              },
              {
                "label": "defaultHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "33"
              }
            ],
            "numberOfBytes": "1088"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "672b317c2a01fe8b81076d7ba50d6f0dfd8de926c5a52d8e7cb5b2508157d1df": {
      "address": "0x15fD4faCad073875d64e6FBc1DDdBCC4F212160C",
      "txHash": "0x21fcaa306a5f2dcae8d5b1a6ca8d7e8596263ebbf4a0ac32a3712c353e6be053",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "rollup",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IRollup)17925",
            "contract": "BlockBuilderRegistry",
            "src": "contracts/block-builder-registry/BlockBuilderRegistry.sol:19"
          },
          {
            "label": "fraudVerifier",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IPlonkVerifier)15628",
            "contract": "BlockBuilderRegistry",
            "src": "contracts/block-builder-registry/BlockBuilderRegistry.sol:20"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "BlockBuilderRegistry",
            "src": "contracts/block-builder-registry/BlockBuilderRegistry.sol:21"
          },
          {
            "label": "blockBuilders",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(BlockBuilderInfo)15443_storage)",
            "contract": "BlockBuilderRegistry",
            "src": "contracts/block-builder-registry/BlockBuilderRegistry.sol:22"
          },
          {
            "label": "blockBuilderAddresses",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BlockBuilderRegistry",
            "src": "contracts/block-builder-registry/BlockBuilderRegistry.sol:23"
          },
          {
            "label": "slashedBlockNumbers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint32,t_bool)",
            "contract": "BlockBuilderRegistry",
            "src": "contracts/block-builder-registry/BlockBuilderRegistry.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)231_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)164_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IPlonkVerifier)15628": {
            "label": "contract IPlonkVerifier",
            "numberOfBytes": "20"
          },
          "t_contract(IRollup)17925": {
            "label": "contract IRollup",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(BlockBuilderInfo)15443_storage)": {
            "label": "mapping(address => struct IBlockBuilderRegistry.BlockBuilderInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BlockBuilderInfo)15443_storage": {
            "label": "struct IBlockBuilderRegistry.BlockBuilderInfo",
            "members": [
              {
                "label": "blockBuilderUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stopTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "numSlashes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isValid",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5e1e64adc41fffae845ddeb77c150e026db52def9bdc3bdf13c5a0aba87fb477": {
      "address": "0xE47732A1ae0A0DF84cA7B1699909dDA9B2f762fb",
      "txHash": "0xfb26010b94fda9e1979fcaf829db98943934e16909f35d3c9f67b9e22f4cca03",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "withdrawalVerifier",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPlonkVerifier)15628",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:30"
          },
          {
            "label": "rollup",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IRollup)17925",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:31"
          },
          {
            "label": "liquidity",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:32"
          },
          {
            "label": "contribution",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IContribution)16064",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:33"
          },
          {
            "label": "nullifiers",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:34"
          },
          {
            "label": "directWithdrawalTokenIndices",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(UintSet)7480_storage",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:35"
          },
          {
            "label": "lastDirectWithdrawalId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:37"
          },
          {
            "label": "lastClaimableWithdrawalId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Withdrawal",
            "src": "contracts/withdrawal/Withdrawal.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)231_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)164_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IContribution)16064": {
            "label": "contract IContribution",
            "numberOfBytes": "20"
          },
          "t_contract(IPlonkVerifier)15628": {
            "label": "contract IPlonkVerifier",
            "numberOfBytes": "20"
          },
          "t_contract(IRollup)17925": {
            "label": "contract IRollup",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)7008_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)7480_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7008_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "bad063bc61e924fe613cd82f6931d5f80069dcf54658ed74e89d9f2bb706d09e": {
      "address": "0x29766561F2b9057B85F7b0a30a6458BBfd0ceFca",
      "txHash": "0xc7ac743ba810a0f7dc31e3ae51de44414c15ec7a7e51c7397200259da5fba327",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "currentPeriod",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Contribution",
            "src": "contracts/contribution/Contribution.sol:16"
          },
          {
            "label": "totalContributionsInPeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Contribution",
            "src": "contracts/contribution/Contribution.sol:19"
          },
          {
            "label": "contributionsInPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "Contribution",
            "src": "contracts/contribution/Contribution.sol:23"
          },
          {
            "label": "allWeights",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Contribution",
            "src": "contracts/contribution/Contribution.sol:27"
          },
          {
            "label": "allTags",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "contract": "Contribution",
            "src": "contracts/contribution/Contribution.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)231_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f5cdc62f1b8db533e800f98f1298a712298565480b881bdd5a5852302e2198a3": {
      "address": "0x344ef29296a6a67d29e82521E8C9162CF939485F",
      "txHash": "0xd66ea05cd66981fb6a2bebad25130083f79a41da4632a159a147027096951a7a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "nextTokenIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "TokenData",
            "src": "contracts/liquidity/TokenData.sol:9"
          },
          {
            "label": "tokenInfoList",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(TokenInfo)10349_storage)dyn_storage",
            "contract": "TokenData",
            "src": "contracts/liquidity/TokenData.sol:10"
          },
          {
            "label": "fungibleTokenIndexMap",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "TokenData",
            "src": "contracts/liquidity/TokenData.sol:11"
          },
          {
            "label": "nonFungibleTokenIndexMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint32))",
            "contract": "TokenData",
            "src": "contracts/liquidity/TokenData.sol:12"
          },
          {
            "label": "contribution",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IContribution)10154",
            "contract": "Liquidity",
            "src": "contracts/liquidity/Liquidity.sol:30"
          },
          {
            "label": "rollup",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Liquidity",
            "src": "contracts/liquidity/Liquidity.sol:31"
          },
          {
            "label": "withdrawal",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "Liquidity",
            "src": "contracts/liquidity/Liquidity.sol:32"
          },
          {
            "label": "claimableWithdrawals",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Liquidity",
            "src": "contracts/liquidity/Liquidity.sol:33"
          },
          {
            "label": "depositQueue",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(DepositQueue)11579_storage",
            "contract": "Liquidity",
            "src": "contracts/liquidity/Liquidity.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)231_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(DepositData)11586_storage)dyn_storage": {
            "label": "struct DepositQueueLib.DepositData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(TokenInfo)10349_storage)dyn_storage": {
            "label": "struct ITokenData.TokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_contract(IContribution)10154": {
            "label": "contract IContribution",
            "numberOfBytes": "20"
          },
          "t_enum(TokenType)10341": {
            "label": "enum ITokenData.TokenType",
            "members": [
              "NATIVE",
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint32))": {
            "label": "mapping(address => mapping(uint256 => uint32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_struct(DepositData)11586_storage": {
            "label": "struct DepositQueueLib.DepositData",
            "members": [
              {
                "label": "depositHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isRejected",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(DepositQueue)11579_storage": {
            "label": "struct DepositQueueLib.DepositQueue",
            "members": [
              {
                "label": "depositData",
                "type": "t_array(t_struct(DepositData)11586_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "front",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rear",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(TokenInfo)10349_storage": {
            "label": "struct ITokenData.TokenInfo",
            "members": [
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)10341",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
